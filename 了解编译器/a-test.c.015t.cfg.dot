digraph "a-test.c.015t.cfg" {
overlap=false;
subgraph "cluster_calculate_area" {
	style="dashed";
	color="black";
	label="calculate_area ()";
	fn_0_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_0_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_0_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ radius\ *\ radius;\l\
|D.3414\ =\ _1\ *\ 3.141592653589793115997963468544185161590576171875e+0;\l\
}"];

	fn_0_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|\<L0\>:\l\
|return\ D.3414;\l\
}"];

	fn_0_basic_block_0:s -> fn_0_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_2:s -> fn_0_basic_block_3:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_0_basic_block_3:s -> fn_0_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_0_basic_block_0:s -> fn_0_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	subgraph cluster_1_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_1_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (i\ \<=\ 100)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_1_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|sum\ =\ sum\ +\ i;\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	fn_1_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_1_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_1_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|scanf\ (\"%lf\",\ &r);\l\
|r.0_1\ =\ r;\l\
|area\ =\ calculate_area\ (r.0_1);\l\
|printf\ (\"area\ is\ %lf\\n\",\ area);\l\
|r.1_2\ =\ r;\l\
|_3\ =\ r.1_2\ +\ 1.0e+0;\l\
|r\ =\ _3;\l\
|sum\ =\ 0;\l\
|i\ =\ 1;\l\
goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_1_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|printf\ (\"10\ squared\ is\ %d\ and\ its\ square\ root\ is\ %f\\n\",\ 100,\ 3.162277660168379522787063251598738133907318115234375e+0);\l\
|switch\ (sum)\ \<default:\ \<L5\>\ [INV],\ case\ 5000:\ \<L3\>\ [INV],\ case\ 5050:\ \<L4\>\ [INV]\>\l\
}"];

	fn_1_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|\<L3\>:\l\
|__builtin_puts\ (&\"wrong\ answer\"[0]);\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_1_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|\<L4\>:\l\
|__builtin_puts\ (&\"correct\ answer\"[0]);\l\
}"];

	fn_1_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|\<L5\>:\l\
|D.3417\ =\ 0;\l\
}"];

	fn_1_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|\<L7\>:\l\
|return\ D.3417;\l\
}"];

	fn_1_basic_block_0:s -> fn_1_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_1_basic_block_2:s -> fn_1_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_1_basic_block_3:s -> fn_1_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_1_basic_block_4:s -> fn_1_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_4:s -> fn_1_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_5:s -> fn_1_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_5:s -> fn_1_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_5:s -> fn_1_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_6:s -> fn_1_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_1_basic_block_7:s -> fn_1_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_1_basic_block_8:s -> fn_1_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_1_basic_block_9:s -> fn_1_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_1_basic_block_0:s -> fn_1_basic_block_1:n [style="invis",constraint=true];
}
}
