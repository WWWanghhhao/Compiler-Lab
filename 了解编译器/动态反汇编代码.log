
test-dy：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	push   0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmp *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmp *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmp *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <printf@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmp *0x2f3d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmp *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d fc 00 00 00 	lea    0xfc(%rip),%rdi        # 11bb <main>
    10bf:	ff 15 13 2f 00 00    	call   *0x2f13(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt    
    10c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 41 2f 00 00 	lea    0x2f41(%rip),%rdi        # 4018 <__TMC_END__>
    10d7:	48 8d 05 3a 2f 00 00 	lea    0x2f3a(%rip),%rax        # 4018 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 2e 00 00 	mov    0x2ef6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 11 2f 00 00 	lea    0x2f11(%rip),%rdi        # 4018 <__TMC_END__>
    1107:	48 8d 35 0a 2f 00 00 	lea    0x2f0a(%rip),%rsi        # 4018 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d cd 2e 00 00 00 	cmpb   $0x0,0x2ecd(%rip)        # 4018 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	call   1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 a5 2e 00 00 01 	movb   $0x1,0x2ea5(%rip)        # 4018 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	ret    
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001189 <calculate_area>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    1196:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    119b:	66 0f 28 c8          	movapd %xmm0,%xmm1
    119f:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    11a3:	f2 0f 10 05 bd 0e 00 	movsd  0xebd(%rip),%xmm0        # 2068 <_IO_stdin_used+0x68>
    11aa:	00 
    11ab:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    11af:	66 48 0f 7e c0       	movq   %xmm0,%rax
    11b4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    11b9:	5d                   	pop    %rbp
    11ba:	c3                   	ret    

00000000000011bb <main>:
    11bb:	f3 0f 1e fa          	endbr64 
    11bf:	55                   	push   %rbp
    11c0:	48 89 e5             	mov    %rsp,%rbp
    11c3:	48 83 ec 10          	sub    $0x10,%rsp
    11c7:	48 8d 05 42 2e 00 00 	lea    0x2e42(%rip),%rax        # 4010 <r>
    11ce:	48 89 c6             	mov    %rax,%rsi
    11d1:	48 8d 05 30 0e 00 00 	lea    0xe30(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    11d8:	48 89 c7             	mov    %rax,%rdi
    11db:	b8 00 00 00 00       	mov    $0x0,%eax
    11e0:	e8 ab fe ff ff       	call   1090 <__isoc99_scanf@plt>
    11e5:	48 8b 05 24 2e 00 00 	mov    0x2e24(%rip),%rax        # 4010 <r>
    11ec:	66 48 0f 6e c0       	movq   %rax,%xmm0
    11f1:	e8 93 ff ff ff       	call   1189 <calculate_area>
    11f6:	66 48 0f 7e c0       	movq   %xmm0,%rax
    11fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1203:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1208:	48 8d 05 fd 0d 00 00 	lea    0xdfd(%rip),%rax        # 200c <_IO_stdin_used+0xc>
    120f:	48 89 c7             	mov    %rax,%rdi
    1212:	b8 01 00 00 00       	mov    $0x1,%eax
    1217:	e8 64 fe ff ff       	call   1080 <printf@plt>
    121c:	f2 0f 10 0d ec 2d 00 	movsd  0x2dec(%rip),%xmm1        # 4010 <r>
    1223:	00 
    1224:	f2 0f 10 05 44 0e 00 	movsd  0xe44(%rip),%xmm0        # 2070 <_IO_stdin_used+0x70>
    122b:	00 
    122c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1230:	f2 0f 11 05 d8 2d 00 	movsd  %xmm0,0x2dd8(%rip)        # 4010 <r>
    1237:	00 
    1238:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    123f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    1246:	eb 0a                	jmp    1252 <main+0x97>
    1248:	8b 45 f4             	mov    -0xc(%rbp),%eax
    124b:	01 45 f0             	add    %eax,-0x10(%rbp)
    124e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1252:	83 7d f4 64          	cmpl   $0x64,-0xc(%rbp)
    1256:	7e f0                	jle    1248 <main+0x8d>
    1258:	48 8b 05 19 0e 00 00 	mov    0xe19(%rip),%rax        # 2078 <_IO_stdin_used+0x78>
    125f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1264:	be 64 00 00 00       	mov    $0x64,%esi
    1269:	48 8d 05 b0 0d 00 00 	lea    0xdb0(%rip),%rax        # 2020 <_IO_stdin_used+0x20>
    1270:	48 89 c7             	mov    %rax,%rdi
    1273:	b8 01 00 00 00       	mov    $0x1,%eax
    1278:	e8 03 fe ff ff       	call   1080 <printf@plt>
    127d:	81 7d f0 88 13 00 00 	cmpl   $0x1388,-0x10(%rbp)
    1284:	74 0b                	je     1291 <main+0xd6>
    1286:	81 7d f0 ba 13 00 00 	cmpl   $0x13ba,-0x10(%rbp)
    128d:	74 13                	je     12a2 <main+0xe7>
    128f:	eb 21                	jmp    12b2 <main+0xf7>
    1291:	48 8d 05 b4 0d 00 00 	lea    0xdb4(%rip),%rax        # 204c <_IO_stdin_used+0x4c>
    1298:	48 89 c7             	mov    %rax,%rdi
    129b:	e8 d0 fd ff ff       	call   1070 <puts@plt>
    12a0:	eb 10                	jmp    12b2 <main+0xf7>
    12a2:	48 8d 05 b0 0d 00 00 	lea    0xdb0(%rip),%rax        # 2059 <_IO_stdin_used+0x59>
    12a9:	48 89 c7             	mov    %rax,%rdi
    12ac:	e8 bf fd ff ff       	call   1070 <puts@plt>
    12b1:	90                   	nop
    12b2:	b8 00 00 00 00       	mov    $0x0,%eax
    12b7:	c9                   	leave  
    12b8:	c3                   	ret    

Disassembly of section .fini:

00000000000012bc <_fini>:
    12bc:	f3 0f 1e fa          	endbr64 
    12c0:	48 83 ec 08          	sub    $0x8,%rsp
    12c4:	48 83 c4 08          	add    $0x8,%rsp
    12c8:	c3                   	ret    
