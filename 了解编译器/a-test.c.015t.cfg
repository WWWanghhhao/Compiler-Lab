
;; Function calculate_area (calculate_area, funcdef_no=0, decl_uid=3399, cgraph_uid=1, symbol_order=1)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
double calculate_area (double radius)
{
  double D.3414;

  <bb 2> :
  _1 = radius * radius;
  D.3414 = _1 * 3.141592653589793115997963468544185161590576171875e+0;

  <bb 3> :
<L0>:
  return D.3414;

}



;; Function main (main, funcdef_no=1, decl_uid=3401, cgraph_uid=2, symbol_order=2)

Removing basic block 9
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 8 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
int main ()
{
  int i;
  int sum;
  double area;
  int D.3417;

  <bb 2> :
  scanf ("%lf", &r);
  r.0_1 = r;
  area = calculate_area (r.0_1);
  printf ("area is %lf\n", area);
  r.1_2 = r;
  _3 = r.1_2 + 1.0e+0;
  r = _3;
  sum = 0;
  i = 1;
  goto <bb 4>; [INV]

  <bb 3> :
  sum = sum + i;
  i = i + 1;

  <bb 4> :
  if (i <= 100)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  printf ("10 squared is %d and its square root is %f\n", 100, 3.162277660168379522787063251598738133907318115234375e+0);
  switch (sum) <default: <L5> [INV], case 5000: <L3> [INV], case 5050: <L4> [INV]>

  <bb 6> :
<L3>:
  __builtin_puts (&"wrong answer"[0]);
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:
  __builtin_puts (&"correct answer"[0]);

  <bb 8> :
<L5>:
  D.3417 = 0;

  <bb 9> :
<L7>:
  return D.3417;

}


